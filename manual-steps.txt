1. Create and provision a VM
  1.1 Prepare host
    #check if host CPU supports virtuaization and KVM acceleration;
    #install necessary packages (without graphical packages!)
    sudo apt install --no-install-recommends qemu-system libvirt-clients libvirt-daemon-system virtinst
    #if using non-root user, add him to the libvirt group to allow him to manage VMs
    #setup virtual network on host if necessary
  1.2 Define a virtual network and virtual disks pool, create and provision a VM
    #dump default virtual network config to use it as a template
    virsh net-dumpxml default
    #create xml net configuration file and use it to create a new virtual network
    virsh net-define net-definition.xml
    virsh net-start network-name
    virsh net-autostart network-name

    #example of directory pool xml definition can be found here https://libvirt.org/storage.html#directory-pool
    virsh pool-define pool-definition.xml
    virsh pool-start pool-name
    virsh pool-autostart pool-name
    
    #instead of using a pool you can also create a disk image file with 'qemu-img create -f qcow2 virtual-volume.qcow2 5GB'
    #qemu-img create -f qcow2 virtual-volume.qcow2 5GB
    #sudo virt-install --name vm-name --ram 1024 --vcpus=2 --disk path=virtual-volume.qcow2 --location CentOS-Stream-9-latest-x86_64-dvd1.iso --os-variant centos-stream8 --network bridge=virbr0,model=virtio --graphics none --console pty,target_type=serial --extra-args "console=ttyS0"
    
    #print xml definition of a VM you're about to create
    sudo virt-install --name vm-name --memory 1024 --vcpus=2 --disk pool=pool-name,size=20,bus=virtio,sparse=true,cache=none,io=native --location CentOS-Stream-9-latest-x86_64-dvd1.iso --os-variant centos-stream8 --network network-name --virt-type kvm --graphics none --console pty,target_type=serial --extra-args "console=ttyS0" --print-xml
    #use that xml to define a VM (domain)
    virsh define vm-definition.xml

  1.3 Install and configure a web server, add firewall rules
  1.4 Deploy a web app
